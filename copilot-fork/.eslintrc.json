{
	"root": true,
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": 6,
		"sourceType": "module"
	},
	"plugins": [
		"@typescript-eslint",
		"@stylistic",
		"jsdoc",
		"import",
		"header",
		"no-only-tests",
		"local"
	],
	"rules": {
		"indent": [
			"error",
			"tab",
			{
				"ignoredNodes": [
					"SwitchCase",
					"ClassDeclaration",
					"TemplateLiteral *" // Conflicts with tsfmt
				]
			}
		],
		"constructor-super": "error",
		"curly": "error",
		"eqeqeq": "error",
		"prefer-const": [
			"error",
			{
				"destructuring": "all"
			}
		],
		"no-buffer-constructor": "error",
		"no-caller": "error",
		"no-case-declarations": "error",
		"no-debugger": "error",
		"no-duplicate-case": "error",
		"no-duplicate-imports": "error",
		"no-eval": "error",
		"no-async-promise-executor": "error",
		"no-extra-semi": "error",
		"no-new-wrappers": "error",
		"no-redeclare": "off",
		"no-sparse-arrays": "error",
		"no-throw-literal": "error",
		"no-unsafe-finally": "error",
		"no-unused-labels": "error",
		"no-restricted-globals": [
			"error",
			"name",
			"length",
			"event",
			"closed",
			"external",
			"status",
			"origin",
			"orientation",
			"context"
		], // non-complete list of globals that are easy to access unintentionally
		"no-var": "error",
		"jsdoc/no-types": "error",
		"semi": "error",
		"@stylistic/member-delimiter-style": "error",
		"@typescript-eslint/naming-convention": [
			"error",
			{
				"selector": "class",
				"format": ["PascalCase"]
			}
		],
		"no-restricted-imports": [
			"error",
			// node: builtins
			"assert",
			"assert/strict",
			"async_hooks",
			"buffer",
			"child_process",
			"cluster",
			"console",
			"constants",
			"crypto",
			"dgram",
			"diagnostics_channel",
			"dns",
			"dns/promises",
			"domain",
			"events",
			"fs",
			"fs/promises",
			"http",
			"http2",
			"https",
			"inspector",
			"module",
			"net",
			"os",
			"path",
			"path/posix",
			"path/win32",
			"perf_hooks",
			"process",
			"punycode",
			"querystring",
			"readline",
			"readline/promises",
			"repl",
			"stream",
			"stream/consumers",
			"stream/promises",
			"stream/web",
			"string_decoder",
			"sys",
			"timers",
			"timers/promises",
			"tls",
			"trace_events",
			"tty",
			"url",
			"util",
			"util/types",
			"v8",
			"vm",
			"wasi",
			"worker_threads",
			"zlib",
			// node: dependencies
			"@humanwhocodes/gitignore-to-minimatch",
			"@vscode/extension-telemetry",
			"applicationinsights",
			"ignore",
			"isbinaryfile",
			"minimatch",
			"source-map-support",
			"vscode-tas-client",
			"web-tree-sitter"
		],
		"import/no-restricted-paths": [
			"error",
			{
				"zones": [
					{
						"target": "**/common/**",
						"from": [
							"**/vscode/**",
							"**/node/**",
							"**/vscode-node/**",
							"**/worker/**",
							"**/vscode-worker/**"
						]
					},
					{
						"target": "**/vscode/**",
						"from": [
							"**/node/**",
							"**/vscode-node/**",
							"**/worker/**",
							"**/vscode-worker/**"
						]
					},
					{
						"target": "**/node/**",
						"from": [
							"**/vscode/**",
							"**/vscode-node/**",
							"**/worker/**",
							"**/vscode-worker/**"
						]
					},
					{
						"target": "**/vscode-node/**",
						"from": [
							"**/worker/**",
							"**/vscode-worker/**"
						]
					},
					{
						"target": "**/worker/**",
						"from": [
							"**/vscode/**",
							"**/node/**",
							"**/vscode-node/**",
							"**/vscode-worker/**"
						]
					},
					{
						"target": "**/vscode-worker/**",
						"from": [
							"**/node/**",
							"**/vscode-node/**"
						]
					},
					{
						"target": "./src/",
						"from": "./test/"
					},
					{
						"target": "./src/util",
						"from": ["./src/platform", "./src/extension"]
					},
					{
						"target": "./src/platform",
						"from": ["./src/extension"]
					},
					{
						"target": ["./test", "!./test/base/extHostContext/*.ts"],
						"from": ["**/vscode-node/**", "**/vscode-worker/**"]
					}
				]
			}
		],
		"local/no-instanceof-uri": ["error"],
		"local/no-test-imports": ["error"],
		"local/no-runtime-import": [
			"error",
			{
				"test": ["vscode"],
				"src/**/common/**/*": ["vscode"],
				"src/**/node/**/*": ["vscode"]
			}
		],
		"local/no-funny-filename": ["error"],
		"local/no-bad-gdpr-comment": ["error"],
		"local/no-gdpr-event-name-mismatch": ["error"],
		"local/no-unlayered-files": ["error"],
		"header/header": [
			"error",
			"block",
			[
				"---------------------------------------------------------------------------------------------",
				" *  Copyright (c) Microsoft Corporation. All rights reserved.",
				" *  Licensed under the MIT License. See License.txt in the project root for license information.",
				" *--------------------------------------------------------------------------------------------"
			]
		]
	},
	"overrides": [
		{
			"files": "**/{vscode-node,node}/**/*.ts*",
			"rules": { "no-restricted-imports": "off" }
		},
		{
			"files": ["*.js"],
			"rules": {
				"jsdoc/no-types": "off"
			}
		},
		{
			"files": ["src/extension/**/*.tsx"],
			"rules": {
				"local/no-missing-linebreak": "error"
			}
		},
		{
			"files": ["**/*.test.ts*"],
			"rules": {
				"local/no-test-only": "error"
			}
		},
		{
			"files": [
				"test/**",
				"src/vscodeTypes.ts",
				"script/**",
				"src/extension/*.d.ts",
				"build/**"
			],
			"rules": {
				"local/no-unlayered-files": "off",
				"no-restricted-imports": "off"
			}
		}
	],
	"settings": {
		"import/resolver": {
			"node": {
				"extensions": [".ts", ".tsx"]
			}
		}
	}
}
